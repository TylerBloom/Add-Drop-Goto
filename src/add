# Function for adding new waypoints
runAdd (){
  local baseDir=$(pwd)
  local newJumps=()
  local newPosts=()
  if [ $verbose ]
  then
    echo "Beginning to add waypoints"
    readWayPoints
  fi

  for opt in $1
  do
    [ $force ] && [ $verbose ] && echo "Force option found. New waypoints will overwrite past ones."
    if [ -e $opt ] && [ -d $opt ]
    then
      [ $verbose ] && echo "Found "$opt" to be a post."
      newPosts=( ${newPosts[@]} $opt )
    else
      [ $verbose ] && echo "Found "$opt" to be a jump."
      newJumps=( ${newJumps[@]} $opt )
    fi
  done
  
  indexList=${!newJumps[@]}
  if [[ "${!newJumps[@]}" != "${!newPosts[@]}" ]] 
  then
    echo "Unbalanced jumps and posts!!!"
    lj=( ${!newJumps[@]} )
    lp=( ${!newPosts[@]} )
    if [ ${lj[-1]} -gt ${lp[-1]} ]
    then
      indexList=$lp
      echo "The following jumps will be unpaired:"
      echo ${newJumps[@]:$((${lp[-1]}+1))} | sed 's/ /\n/g'
      echo ""
    else
      indexList=$lj
      echo "The following posts will be unpaired:"
      echo ${newPosts[@]:$((${lj[-1]}+1))} | sed 's/ /\n/g'
      echo ""
    fi
  fi

  for index in $indexList
  do
    cd $baseDir
    cd ${newPosts[$index]}
    if [ ${wayPoints[${newJumps[$index]}]} ] # Checks to see if the waypoint currently exists
    then
      if [ $force ]
      then
        if [ $verbose ]
        then
          echo ${newJumps[$index]} already exists as ${wayPoints[${newJumps[$index]}]}.
          echo Forcing ${newJumps[$index]} as $(pwd)
        fi
        for i in ${!jumps[@]} 
        do
          if [ ${newJumps[$index]} == ${jumps[$i]} ]
          then
            [ $verbose ] && echo "Match found for ${newJumps[$index]}: ${posts[$i]} as ""'"${jumps[$i]}"'"".  Dropping."
            jumps[$i]=""
            posts[$i]=""
          fi
        done
        jumps=( ${jumps[@]} )
        posts=( ${posts[@]} )
      else # Ignores passed in waypoint
        echo ${newJumps[$index]} already exists as ${wayPoints[${newJumps[$index]}]}.
        echo Use "'"--f"'" to overwrite waypoints.
        continue
      fi
    fi
    [ $verbose ] && echo "Adding "$(pwd)" as '"${newJumps[$index]}"'"
    jumps=( ${jumps[@]} ${newJumps[$index]} )
    posts=( ${posts[@]} $(pwd) )
    cd $baseDir
  done

  [ $verbose ] && readWayPoints

  writeWayPoints
}

